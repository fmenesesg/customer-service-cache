<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.redhat</groupId>
	<artifactId>customer-service-cache</artifactId>
	<version>0.0.2-SNAPSHOT</version>

	<name>customer-service-cache</name>
	<description>Cache Demo</description>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version>
		<springdoc.version>1.5.1</springdoc.version>
		<springcloud.kubernetes.version>1.1.7.RELEASE</springcloud.kubernetes.version>
		<springboot.data.redis.version>2.3.5.RELEASE</springboot.data.redis.version>
		<!--infinispan.version>11.0.1.Final</infinispan.version-->
		<infinispan.spring.version>11.0.6.Final</infinispan.spring.version>
		<infinispan.version>12.0.0.Dev07</infinispan.version>
		<micrometer.version>1.6.1</micrometer.version>
		<microprofile.config>2.0</microprofile.config>
		<lombok.version>1.18.10</lombok.version>

		<ping.service.name>ping</ping.service.name>
		<ingress.domain>minikube.cloud</ingress.domain>
	</properties>

	<dependencies>

		<!-- Spring Cache Remote Infinispan -->
		<!-- <dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-spring-boot-starter-remote</artifactId>
			<version>${infinispan.version}</version>
		</dependency> -->

		<!-- Lock Infinispan version, instead of the one included by springboot itself -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-spring5-embedded</artifactId>
			<version>${infinispan.version}</version>
		</dependency>

		<!-- Spring Cache Embedded Infinispan -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-spring-boot-starter-embedded</artifactId>
			<version>${infinispan.spring.version}</version>
		</dependency>

		<!-- SpringBoot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Data Redis>
		<dependency>  
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<version>${springboot.data.redis.version}</version>
		</dependency-->

		<!-- OpenAPI -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<!-- Spring Cloud Kubernetes -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes</artifactId>
			<version>${springcloud.kubernetes.version}</version>
		</dependency>

		<!-- Monitoring through Actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
		</dependency>

	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>${java.version}</release>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--jvmArguments>-Djavax.net.ssl.trustStore=/home/rgordill/git/customer-service-jdg/customer-service-jdg/redis.p12 -Djavax.net.ssl.trustStorePassword=redis -Djavax.net.ssl.trustStoreType=PKCS12</jvmArguments-->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jkube</groupId>
				<artifactId>kubernetes-maven-plugin</artifactId>
				<version>1.0.2</version>
				<configuration>
					<images>
						<image>
							<name>rgordill/%a:%l</name>
							<!--registry>quay.io</registry-->
							<build>
								<from>quay.io/jkube/jkube-java-binary-s2i:0.0.8</from>
								<assembly>
									<targetDir>/deployments</targetDir>
								</assembly>
							</build>
						</image>
					</images>
					<resources>
						<replicas>2</replicas>
						<serviceAccount>${project.artifactId}</serviceAccount>
						<volumes>
							<volume>
								<name>config</name>
								<type>configMap</type>
								<configMapName>${project.artifactId}-config</configMapName>
								<mounts>
									<mount>/opt/jboss/etc</mount>
								</mounts>
							</volume>
						</volumes>
						<services>
							<service>
								<name>${project.artifactId}</name>
								<ports>
									<port>
										<name>http</name>
										<protocol>TCP</protocol>
										<port>8080</port>
										<targetPort>8080</targetPort>
									</port>
								</ports>
							</service>
							<service>
								<name>${ping.service.name}</name>
								<headless>true</headless>
								<ports>
									<port>
										<name>${ping.service.name}</name>
										<protocol>TCP</protocol>
										<port>7800</port>
										<targetPort>7800</targetPort>
									</port>
								</ports>
							</service>
						</services>
						<configMap>
							<name>${project.artifactId}-config</name>
							<entries>
								<entry>
									<file>src/main/resources/application-kubernetes.properties</file>
								</entry>
								<entry>
									<file>src/main/resources/cache-kubernetes.xml</file>
								</entry>
							</entries>
						</configMap>
						<env>
							<!-- disable jolokia -->
							<AB_JOLOKIA_OFF>true</AB_JOLOKIA_OFF>
							<JAVA_OPTIONS>-Djgroups.dns.query=${ping.service.name}</JAVA_OPTIONS>
							<JAVA_ARGS>--spring.profiles.active=kubernetes --spring.application.name=customer-service-cache --spring.cloud.kubernetes.config.name=customer-service-cache-config --spring.cloud.kuberentes.config.paths=/opt/jboss/etc --spring.cloud.kubernetes.config.enableApi=false
					</JAVA_ARGS>
						</env>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
